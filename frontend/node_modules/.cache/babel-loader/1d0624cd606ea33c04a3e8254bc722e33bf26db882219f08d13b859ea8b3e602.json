{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst mysql = require('mysql2');\nconst cors = require('cors');\nconst app = express();\nconst port = process.env.PORT || 5000;\n\n// Middleware\napp.use(bodyParser.json());\napp.use(cors()); // Menambahkan middleware cors\n\n// Konfigurasi koneksi ke MySQL\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '',\n  database: 'lostandfound'\n});\ndb.connect(err => {\n  if (err) {\n    throw err;\n  }\n  console.log('Terhubung ke database MySQL');\n});\n\n// Route registrasi\napp.post('/register', (req, res) => {\n  const {\n    username,\n    password,\n    email\n  } = req.body;\n  const query = 'INSERT INTO users (username, password, email) VALUES (?, ?, ?)';\n  db.query(query, [username, password, email], (err, result) => {\n    if (err) {\n      res.status(400).send('Error saat mendaftarkan user');\n    } else {\n      res.status(201).send('User terdaftar');\n    }\n  });\n});\napp.listen(port, () => {\n  console.log(`Server berjalan di port ${port}`);\n});","map":{"version":3,"names":["express","require","bodyParser","mysql","cors","app","port","process","env","PORT","use","json","db","createConnection","host","user","password","database","connect","err","console","log","post","req","res","username","email","body","query","result","status","send","listen"],"sources":["/Users/rifkyroudana/Documents/File Kuliah S2/Semester 1/PPS/Project/lost-and-found/frontend/src/AdminRegister.js"],"sourcesContent":["const express = require('express');\nconst bodyParser = require('body-parser');\nconst mysql = require('mysql2');\nconst cors = require('cors');\n\nconst app = express();\nconst port = process.env.PORT || 5000;\n\n// Middleware\napp.use(bodyParser.json());\napp.use(cors()); // Menambahkan middleware cors\n\n// Konfigurasi koneksi ke MySQL\nconst db = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: '',\n    database: 'lostandfound',\n});\n\ndb.connect((err) => {\n    if (err) {\n        throw err;\n    }\n    console.log('Terhubung ke database MySQL');\n});\n\n// Route registrasi\napp.post('/register', (req, res) => {\n    const { username, password, email } = req.body;\n    const query = 'INSERT INTO users (username, password, email) VALUES (?, ?, ?)';\n\n    db.query(query, [username, password, email], (err, result) => {\n        if (err) {\n            res.status(400).send('Error saat mendaftarkan user');\n        } else {\n            res.status(201).send('User terdaftar');\n        }\n    });\n});\n\napp.listen(port, () => {\n    console.log(`Server berjalan di port ${port}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,KAAK,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,MAAMM,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;;AAErC;AACAJ,GAAG,CAACK,GAAG,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC;AAC1BN,GAAG,CAACK,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjB;AACA,MAAMQ,EAAE,GAAGT,KAAK,CAACU,gBAAgB,CAAC;EAC9BC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACd,CAAC,CAAC;AAEFL,EAAE,CAACM,OAAO,CAAEC,GAAG,IAAK;EAChB,IAAIA,GAAG,EAAE;IACL,MAAMA,GAAG;EACb;EACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC9C,CAAC,CAAC;;AAEF;AACAhB,GAAG,CAACiB,IAAI,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAChC,MAAM;IAAEC,QAAQ;IAAET,QAAQ;IAAEU;EAAM,CAAC,GAAGH,GAAG,CAACI,IAAI;EAC9C,MAAMC,KAAK,GAAG,gEAAgE;EAE9EhB,EAAE,CAACgB,KAAK,CAACA,KAAK,EAAE,CAACH,QAAQ,EAAET,QAAQ,EAAEU,KAAK,CAAC,EAAE,CAACP,GAAG,EAAEU,MAAM,KAAK;IAC1D,IAAIV,GAAG,EAAE;MACLK,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,8BAA8B,CAAC;IACxD,CAAC,MAAM;MACHP,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;IAC1C;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;AAEF1B,GAAG,CAAC2B,MAAM,CAAC1B,IAAI,EAAE,MAAM;EACnBc,OAAO,CAACC,GAAG,CAAC,2BAA2Bf,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}